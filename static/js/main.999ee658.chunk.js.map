{"version":3,"sources":["GlobalStyle.js","Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/index.js","theme.js","App.js","useTasks.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","StyledForm","styled","form","theme","breakpoints","mobile","Input","input","colors","accentColor","Button","button","primaryColor","textColor","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","focusInput","current","focus","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","autoFocus","ref","value","placeholder","onChange","target","onClick","List","ul","Item","li","hidden","css","Content","span","done","toggleDone","green","remove","red","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","id","content","Wrapper","div","disabledColor","Buttons","toggleHideDone","setAllDone","length","disabled","every","section","backgroundColor","Header","header","Title","h2","Body","Section","title","body","extraHeaderContent","Container","main","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.999ee658.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *,\r\n    ::after,\r\n    ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n    background-color: #eee;\r\n    font-family: 'Montserrat', sans-serif;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 20px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding: 10px;\r\n    border: 1px solid ${({ theme }) => theme.colors.accentColor};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 10px;\r\n    background-color: ${({ theme }) => theme.colors.primaryColor};\r\n    color: ${({ theme }) => theme.colors.textColor};\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n        transform: scale(1.1);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;","import { useRef, useState } from \"react\";\r\nimport { StyledForm, Input, Button } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n\r\n    const focusInput = () => {\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const trimmedNewTaskContent = newTaskContent.trim();\r\n\r\n        if (!trimmedNewTaskContent) {\r\n            return;\r\n        }\r\n        addNewTask(trimmedNewTaskContent);\r\n        setNewTaskContent(\"\");\r\n        focusInput();\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onFormSubmit}>\r\n            <Input\r\n                autoFocus\r\n                ref={inputRef}\r\n                value={newTaskContent}\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <Button onClick={focusInput}>Dodaj zadanie</Button>\r\n        </StyledForm>\r\n    )\r\n};\r\n\r\nexport default Form;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 10px;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.colors.accentColor};\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    overflow-wrap: anywhere;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 0;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: ${({ theme }) => theme.colors.textColor};\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: background 0.3s;\r\n    \r\n    &:hover {\r\n       filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background-color: ${({ theme }) => theme.colors.green};\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background-color: ${({ theme }) => theme.colors.red};\r\n    `}\r\n`;","import { List, Item, Content, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item key={task.id} hidden={task.done && hideDone}>\r\n                <Button toggleDone onClick={() => toggleTaskDone(task.id)}>\r\n                    {task.done ? \"âœ”\" : \"\"}\r\n                </Button>\r\n                <Content done={task.done}>\r\n                    {task.content}\r\n                </Content>\r\n                <Button remove onClick={() => removeTask(task.id)}>\r\n                    &#128465;\r\n                </Button>\r\n            </Item>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    background: transparent;\r\n    color: ${({ theme }) => theme.colors.primaryColor};\r\n    border: none;\r\n    cursor: pointer;\r\n    margin: 0 0 0 20px;\r\n    transition: color 0.3s;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n        flex-basis: 100%;\r\n        margin: 10px;\r\n    }\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:disabled { \r\n        filter: none;\r\n        color: ${({ theme }) => theme.colors.disabledColor};\r\n        cursor: not-allowed;\r\n    }\r\n`;","import { Wrapper, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    <Wrapper>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button onClick={toggleHideDone}>\r\n                    {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n                </Button>\r\n                <Button\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                    onClick={setAllDone}\r\n                >\r\n                    UkoÅ„cz wszystkie\r\n                </Button>\r\n            </>\r\n        )}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Buttons;\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n    margin: 10px 0;\r\n    background: ${({ theme }) => theme.colors.backgroundColor};\r\n    box-shadow: 0 0 5px ${({ theme }) => theme.colors.accentColor};\r\n`;\r\n\r\nexport const Header = styled.header`\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px;\r\n    border-bottom: 1px solid ${({ theme }) => theme.colors.accentColor};\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobile}px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 20px;\r\n    margin: 0;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n    padding: 20px;\r\n`;","import { Wrapper, Header, Title, Body } from \"./styled\"\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <Wrapper>\r\n        <Header>\r\n            <Title>\r\n                {title}\r\n            </Title>\r\n            {extraHeaderContent}\r\n        </Header>\r\n        <Body>\r\n            {body}\r\n        </Body>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Section;","const Header = ({ title }) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nconst Container = styled.main`\r\n    max-width: 900px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport default Container;","export const theme = {\r\n    colors: {\r\n        primaryColor: \"teal\",\r\n        disabledColor: \"#ccc\",\r\n        accentColor: \"#ddd\",\r\n        backgroundColor: \"white\",\r\n        textColor: \"white\",\r\n        green: \"hsl(120, 61%, 34%)\",\r\n        red: \"hsl(348, 83%, 47%)\",\r\n    },\r\n    breakpoints: {\r\n        mobile: 767,\r\n    }\r\n};","import Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useState } from \"react\";\nimport { useTasks } from \"./useTasks\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask,\n  } = useTasks();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <Header title=\"Lista zadaÅ„\" />\n        <Section\n          title=\"Dodaj nowe zadanie\"\n          body={<Form addNewTask={addNewTask} />}\n        />\n        <Section\n          title=\"Lista zadaÅ„\"\n          body={\n            <Tasks\n              tasks={tasks}\n              hideDone={hideDone}\n              removeTask={removeTask}\n              toggleTaskDone={toggleTaskDone}\n            />\n          }\n          extraHeaderContent={\n            <Buttons\n              tasks={tasks}\n              hideDone={hideDone}\n              toggleHideDone={toggleHideDone}\n              setAllDone={setAllDone}\n            />\n          }\n        />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n    const [tasks, setTasks] = useState(JSON.parse(localStorage.getItem('tasks')) || []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            }\r\n            return task;\r\n        }));\r\n    };\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true,\r\n        })));\r\n    };\r\n\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [\r\n            ...tasks,\r\n            {\r\n                content,\r\n                done: false,\r\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n            },\r\n        ]);\r\n    };\r\n\r\n    return {\r\n        tasks,\r\n        removeTask,\r\n        toggleTaskDone,\r\n        setAllDone,\r\n        addNewTask,\r\n    }\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from './GlobalStyle';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}